name: Power Apps CI

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: write  # ✅ required for git push

jobs:
  load-env:
    runs-on: ubuntu-latest
    outputs:
      SOLUTION_LIST: ${{ steps.set-outputs.outputs.SOLUTION_LIST }}
      DEPENDENCY_ORDER: ${{ steps.set-outputs.outputs.DEPENDENCY_ORDER }}
      POWER_PLATFORM_URL: ${{ steps.set-outputs.outputs.POWER_PLATFORM_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Env Vars (Dev)
        id: set-outputs
        run: |
          set -a
          source env/dev.txt
          set +a
          echo "SOLUTION_LIST=$SOLUTION_LIST" >> $GITHUB_OUTPUT
          echo "DEPENDENCY_ORDER=$DEPENDENCY_ORDER" >> $GITHUB_OUTPUT
          echo "POWER_PLATFORM_URL=$POWER_PLATFORM_URL" >> $GITHUB_OUTPUT

  ci:
    runs-on: ubuntu-latest
    needs: load-env

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ✅ Install Microsoft Power Platform CLI
      - name: Setup Power Platform CLI
        uses: microsoft/powerplatform-actions/setup-pac@v1

      # ✅ Authenticate with Azure AD
      - name: Authenticate with PAC
        run: |
          pac auth create \
            --url "${{ needs.load-env.outputs.POWER_PLATFORM_URL }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}" \
            --applicationId "${{ secrets.AZURE_CLIENT_ID }}" \
            --clientSecret "${{ secrets.AZURE_CLIENT_SECRET }}"

      # ✅ Export and unpack each solution (in order)
      - name: Export and Unpack Solutions
        run: |
          IFS=',' read -ra solutions <<< "${{ needs.load-env.outputs.SOLUTION_LIST }}"
          for solution in "${solutions[@]}"; do
            echo "Processing $solution ..."
            mkdir -p "solutions/$solution"
            pac solution export \
              --name "$solution" \
              --outputFile "solutions/$solution.zip" \
              --includeVersion
            pac solution unpack \
              --solutionZip "solutions/$solution.zip" \
              --folder "solutions/$solution" \
              --allowDelete true
          done

      # ✅ Commit back any changes
      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add solutions/*
          git commit -m "Updated Power Platform solutions" || echo "No changes"
          git push
