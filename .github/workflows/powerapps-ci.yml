name: Power Apps CI

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: write  # required for git push

jobs:
  load-env:
    runs-on: self-hosted
    outputs:
      SOLUTION_LIST: ${{ steps.set-outputs.outputs.SOLUTION_LIST }}
      DEPENDENCY_ORDER: ${{ steps.set-outputs.outputs.DEPENDENCY_ORDER }}
      POWER_PLATFORM_URL: ${{ steps.set-outputs.outputs.POWER_PLATFORM_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Load Env Vars (Dev)
        id: set-outputs
        run: |
          set -a
          source env/dev.txt
          set +a
          echo "SOLUTION_LIST=$SOLUTION_LIST" >> $GITHUB_OUTPUT
          echo "DEPENDENCY_ORDER=$DEPENDENCY_ORDER" >> $GITHUB_OUTPUT
          echo "POWER_PLATFORM_URL=$POWER_PLATFORM_URL" >> $GITHUB_OUTPUT

  ci:
    runs-on: self-hosted
    needs: load-env
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------------- Install jq for JSON parsing ----------------
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # ---------------- Install PAC CLI ----------------
      - name: Install Power Platform CLI (PAC)
        id: pac-install
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Add PAC CLI to PATH
        run: |
          echo "Adding PAC CLI to PATH"
          export PATH=$PATH:${{ steps.pac-install.outputs.pac-path }}
          echo "PATH=$PATH" >> $GITHUB_ENV

      # ---------------- Authenticate ----------------
      - name: Authenticate to Power Platform
        run: |
          pac auth create \
            --url "${{ needs.load-env.outputs.POWER_PLATFORM_URL }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}" \
            --applicationId "${{ secrets.AZURE_CLIENT_ID }}" \
            --clientSecret "${{ secrets.AZURE_CLIENT_SECRET }}"

      # ---------------- Ensure solutions folder exists ----------------
      - name: Create solutions folder
        run: mkdir -p solutions

      # ---------------- Export & Unpack each solution ----------------
      - name: Export & Unpack Solutions
        run: |
          SOLUTIONS=$(echo '${{ needs.load-env.outputs.SOLUTION_LIST }}' | jq -r '.[]')
          for solution in $SOLUTIONS; do
            echo "Processing solution: $solution"
            gh-actions-run() {
              echo "Use GitHub Action for $1 if possible"
            }
            pac solution export --name "$solution" --path "solutions/$solution.zip" --overwrite
            pac solution unpack --zip-file "solutions/$solution.zip" --folder "solutions/$solution" --allow-delete
          done

      # ---------------- Commit & Push ----------------
      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add solutions || echo "No changes to add"
          git diff --cached --quiet || git commit -m "Updated Power Platform solutions"
          git push
