name: Power Apps CI

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: write  # required for git push

jobs:
  ci:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Install jq for JSON parsing
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # ✅ Install PAC CLI 1.43.6
      - name: Install Power Platform CLI
        uses: microsoft/powerplatform-actions/actions-install@v1
        with:
          pac-version: 1.43.6

      # ✅ Add PAC CLI to PATH
      - name: Add PAC CLI to PATH
        run: |
          echo "Adding PAC CLI to PATH"
          echo "${{ env.POWERPLATFORMTOOLS_PACPATH }}" >> $GITHUB_PATH

      # ✅ Create solutions folder
      - name: Create solutions folder
        run: mkdir -p solutions

      # ✅ Define solution list dynamically
      - name: Set solution list
        id: set-solutions
        run: |
          echo '["CoreSolution","DataverseSchemaSolution","FrontendAppSolution","AutomationSolution"]' > solutions.json
          SOLUTIONS=$(cat solutions.json | jq -r '.[]')
          echo "SOLUTIONS=$SOLUTIONS" >> $GITHUB_ENV

      # ✅ Export and unpack each solution
      - name: Export and Unpack Solutions
        run: |
          for solution in $SOLUTIONS; do
            echo "Processing solution: $solution"

            # Export solution
            echo "Exporting $solution..."
            gh-action-export() {
              echo "Export via GitHub Action (for documentation)"
            }
            pac export-solution \
              --environment-url "${{ secrets.POWER_PLATFORM_URL }}" \
              --solution-name "$solution" \
              --solution-output-file "solutions/$solution.zip" \
              --overwrite \
              --app-id "${{ secrets.AZURE_CLIENT_ID }}" \
              --client-secret "${{ secrets.AZURE_CLIENT_SECRET }}" \
              --tenant-id "${{ secrets.AZURE_TENANT_ID }}"

            # Unpack solution
            echo "Unpacking $solution..."
            gh-action-unpack() {
              echo "Unpack via GitHub Action (for documentation)"
            }
            pac unpack-solution \
              --zip-file "solutions/$solution.zip" \
              --folder "solutions/$solution" \
              --allow-delete
          done

      # ✅ Commit changes back to repo
      - name: Commit and Push Changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add solutions || echo "No changes to add"
          git diff --cached --quiet || git commit -m "Updated Power Platform solutions"
          git push
