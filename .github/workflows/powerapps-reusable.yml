name: PowerApps Reusable Workflow

on:
  workflow_call:
    inputs:
      pp_url:
        required: true
        type: string
      solutions:
        required: true
        type: string
      azure_client_id:
        required: true
        type: string
      azure_client_secret:
        required: true
        type: string
      azure_tenant_id:
        required: true
        type: string

jobs:
  export-solutions:
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Ensure jq is installed
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      # Ensure .NET SDK 8 is installed
      - name: Install .NET 8 SDK if missing
        run: |
          if ! dotnet --list-sdks 2>/dev/null | grep -q '^8\.'; then
            echo "Installing .NET 8 SDK..."
            wget https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh -O dotnet-install.sh
            chmod +x dotnet-install.sh
            ./dotnet-install.sh --version 8.0.19 --install-dir $HOME/.dotnet
            echo "DOTNET_ROOT=$HOME/.dotnet" >> $GITHUB_ENV
            echo "$HOME/.dotnet:$HOME/.dotnet/tools" >> $GITHUB_PATH
          else
            echo ".NET 8 SDK already installed."
          fi

      # Install Microsoft Power Platform CLI
      - name: Install Microsoft Power Platform CLI (PAC CLI)
        run: |
          PAC_PATH="$HOME/.pac"
          mkdir -p "$PAC_PATH"
          if [ ! -f "$PAC_PATH/pac" ]; then
            echo "Installing PAC CLI..."
            dotnet tool install Microsoft.PowerApps.CLI.Tool --version 1.43.6 --tool-path "$PAC_PATH"
          else
            echo "PAC CLI already installed at $PAC_PATH"
          fi
          echo "$PAC_PATH" >> $GITHUB_PATH
          export PATH="$PAC_PATH:$PATH"
          which pac
          pac --version

      # Authenticate to Power Platform
      - name: Power Platform Auth
        run: |
          export PATH="$HOME/.pac:$PATH"
          pac auth create --url "${{ inputs.pp_url }}" \
            --tenant "${{ inputs.azure_tenant_id }}" \
            --applicationId "${{ inputs.azure_client_id }}" \
            --clientSecret "${{ inputs.azure_client_secret }}"

      # Export and unpack solutions
      - name: Export and Unpack Solutions
        run: |
          export PATH="$HOME/.pac:$PATH"
          mkdir -p solutions
          SOLS='${{ inputs.solutions }}'   # must be valid JSON array: ["Sol1","Sol2"]
          for sol in $(echo $SOLS | jq -r '.[]'); do
            echo "Processing solution: $sol"
            pac solution export --name "$sol" --path "solutions/$sol.zip" --overwrite
            pac solution unpack --zip-file "solutions/$sol.zip" --folder "solutions/$sol" --allow-delete
          done

      # Commit only if there are changes
      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add solutions/*
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Updated Power Platform solutions"
            git push
          fi
