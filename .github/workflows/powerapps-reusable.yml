name: Power Platform Reusable Workflow

on:
  workflow_call:
    inputs:
      pp_url:
        required: true
        type: string
      azure_client_id:
        required: true
        type: string
      azure_client_secret:
        required: true
        type: string
      azure_tenant_id:
        required: true
        type: string
      solutions:
        required: true
        type: string  # JSON array, e.g. '["CoreSolution","FrontendSolution"]'

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Ensure .NET SDK 8 installed
        run: |
          if ! dotnet --list-sdks 2>/dev/null | grep -q '^8\.'; then
            echo "Installing .NET 8 SDK..."
            wget https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh -O dotnet-install.sh
            chmod +x dotnet-install.sh
            ./dotnet-install.sh --version 8.0.19 --install-dir $HOME/.dotnet
            echo "DOTNET_ROOT=$HOME/.dotnet" >> $GITHUB_ENV
            echo "$HOME/.dotnet:$HOME/.dotnet/tools" >> $GITHUB_PATH
          else
            echo ".NET 8 SDK already installed."
          fi

      - name: Ensure PAC CLI installed
        run: |
          PAC_PATH="$HOME/.pac"
          if command -v pac >/dev/null 2>&1; then
            echo "PAC CLI already installed at $(command -v pac)"
          else
            echo "Installing PAC CLI..."
            mkdir -p "$PAC_PATH"
            dotnet tool install Microsoft.PowerApps.CLI.Tool --version 1.43.6 --tool-path "$PAC_PATH"
            echo "$PAC_PATH" >> $GITHUB_PATH
          fi

      - name: Authenticate PAC CLI
        run: |
          pac auth create \
            --url "${{ inputs.pp_url }}" \
            --tenant "${{ inputs.azure_tenant_id }}" \
            --applicationId "${{ inputs.azure_client_id }}" \
            --clientSecret "${{ inputs.azure_client_secret }}"

      - name: Export & Unpack Solutions
        run: |
          mkdir -p solutions
          SOLS=${{ inputs.solutions }}
          for sol in $(echo $SOLS | jq -r '.[]'); do
            echo "Processing solution: $sol"
            pac solution export --name "$sol" --path "solutions/$sol.zip" --overwrite
            pac solution unpack --zip-file "solutions/$sol.zip" --folder "solutions/$sol" --allow-delete
          done

      - name: Commit & Push Changes
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add solutions/*
          git diff --cached --quiet || git commit -m "Updated Power Platform solutions"
          git push
